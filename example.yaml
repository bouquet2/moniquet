# Discord webhook URL for sending alerts
# Can also be set via WEBHOOK_URL environment variable
webhook_url: "https://discord.com/api/webhooks/your-webhook-url"

# Kubernetes namespace to monitor
# Defaults to all namespaces if empty (default)
namespace: ""

# Log level (debug, info, warn, error)
# Defaults to "info" if not specified
log_level: "info"

# Alert interval in minutes
# Set to 0 to send alerts immediately
# Defaults to 3 if not specified
interval: 3

# Resource monitoring configuration
resource_monitoring:
  # Enable/disable resource monitoring
  # Defaults to true if not specified
  enabled: true

  denylist:
    # List of resource kinds to ignore
    # Defaults to empty list if not specified
    kinds: ["CrashLoopBackOff", "ImagePullBackOff", "Evicted"]

# Resource monitoring configuration
gitops:
  # Enable/disable GitOps monitoring
  # Defaults to false if not specified
  enabled: true

  # Enable/disable alerting on GitOps mismatches
  alert_on_mismatch: true

  # Global sync interval in minutes (how often to check repositories)
  # Defaults to 5 minutes if not specified
  # Can be overridden per repository
  sync_interval_minutes: 5

  auto_fix:
    # Enable/disable automatic fixing of GitOps mismatches
    # Defaults to false if not specified
    enabled: false
    
    # List of resource kinds to auto-fix
    # Defaults to empty list if not specified
    kinds: []

  allowlist:
    # List of namespaces to monitor for GitOps
    # Defaults to all if not specified
    namespaces: []
    
    # List of resource kinds to monitor for GitOps
    # Defaults to empty list if not specified
    kinds: []

  denylist:
    # List of namespaces to ignore for GitOps monitoring
    # Defaults to empty list if not specified
    namespaces: []
    
    # List of resource kinds to ignore for GitOps monitoring
    # Defaults to empty list if not specified
    kinds: []

  # List of repositories to monitor
  repositories:
    - name: "example-repo"
      url: ""
      # Path to the manifest files in the repository (relative to the root)
      path: "."
      branch: "main"
      alert_on_mismatch: true
      auto_fix: false
      # Repository-specific sync interval in minutes (optional)
      # If not specified, uses the global sync_interval_minutes setting
      # sync_interval_minutes: 10
      kustomize:
        helmCommand: "helm"      # Default: "helm", change if your helm binary has a different name
        copyEnvExample: true     # Default: false, copies .env.example to .env if .env.example exists


# Node resource monitoring configuration
node_monitoring:
  # Enable/disable node resource monitoring
  # Defaults to true if not specified
  enabled: true
  
  # CPU usage threshold percentage (0-100)
  # Alert when node CPU requests exceed this percentage of allocatable CPU
  # Defaults to 80.0 if not specified
  cpu_threshold_percent: 80.0

# Longhorn storage monitoring configuration
longhorn:
  # Enable/disable Longhorn monitoring
  enabled: true
  
  # Longhorn namespace (usually "longhorn-system")
  namespace: "longhorn-system"
  
  # Enable monitoring for different resource types
  monitor:
    volumes: true
    replicas: true
    engines: true
    nodes: true
    backups: true
  
  # Alert thresholds
  alert_thresholds:
    # Volume usage percentage threshold (0-100)
    volume_usage_percent: 85.0
    
    # Critical remaining capacity in bytes (1GB = 1073741824)
    volume_capacity_critical: 1073741824
    
    # Number of replica failures before alerting
    replica_failure_count: 1 
